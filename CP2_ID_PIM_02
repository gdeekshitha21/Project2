from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

class AdminPage:
    def __init__(self, driver):
        self.driver = driver
        self.page_title = (By.CLASS_NAME, "page-title")
        self.admin_options = {
            "User Management": (By.ID, "menu_admin_UserManagement"),
            "Job": (By.ID, "menu_admin_Job"),
            "Organization": (By.ID, "menu_admin_Organization"),
            "Qualification": (By.ID, "menu_admin_Qualifications"),
            "Nationalities": (By.ID, "menu_admin_nationality"),
            "Corporate Banking": (By.ID, "menu_admin_banking"),
            "Configuration": (By.ID, "menu_admin_Configuration")
        }

    def get_page_title(self):
        return self.driver.find_element(*self.page_title).text

    def verify_admin_options(self):
        for option, locator in self.admin_options.items():
            try:
                WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator))
                print(f"Option '{option}' is displayed.")
            except:
                print(f"Option '{option}' is not displayed.")


# Test case execution
driver = webdriver.Chrome()
driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login")

# Login as admin (precondition)
username = driver.find_element(By.ID, "txtUsername")
password = driver.find_element(By.ID, "txtPassword")
login_button = driver.find_element(By.ID, "btnLogin")

username.send_keys("admin")
password.send_keys("admin123")
login_button.click()

# Navigate to admin page
driver.find_element(By.ID, "menu_admin_viewAdminModule").click()

# Initialize AdminPage object
admin_page = AdminPage(driver)

# Wait for page title to be visible
WebDriverWait(driver, 10).until(EC.visibility_of_element_located(admin_page.page_title))

# Step 1: Validate page title
assert admin_page.get_page_title() == "OrangeHRM", "Page title is not 'OrangeHRM'"

# Step 2: Validate admin options
admin_page.verify_admin_options()

# Close the browser
driver.quit()